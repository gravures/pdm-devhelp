name: Test
on:
  pull_request:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - '*.lock'
  workflow_dispatch:

jobs:
  testing:
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: install uv 0.6.4
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.4"
          enable-cache: true
          cache-dependency-glob: "pdm.lock"

      - name: setup pdm to python ${{ matrix.python-version }}
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install all dependencies and uv workspace sub-packages
        run: |
          pdm workspace-sync --all-groups

      - name: execute tests with tox
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}.${{ matrix.os }}"
        run: |
          pdm run tox --version
          pdm run tox --develop -r -e py

      - name: store coverage file
        if: ${{ matrix.os }} == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}-${{ matrix.os }}
          path: .coverage.${{ matrix.python-version }}.${{ matrix.os }}

      - name: Minimize uv cache
        run: uv cache prune --ci

  coverage:
    needs: [testing]
    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions
      # for publishing new comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: gets coverage db
        uses: actions/download-artifact@v4
        id: download
        with:
          pattern: coverage-*-*
          merge-multiple: true

      - name: create coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERAGE_DATA_BRANCH: python-coverage
          COMMENT_ARTIFACT_NAME: python-coverage
          COMMENT_FILENAME: python-coverage.txt
          MERGE_COVERAGE_FILES: true

      - name: store pull request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage
          path: python-coverage.txt
